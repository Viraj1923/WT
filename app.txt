from flask import Flask,render_template,request,redirect
import psycopg2

app=Flask(__name__)

db={
    'database':'27Business',
    'user':'postgres',
    'password':'aiml',
    'host':'localhost',
    'port':'5432'
}
    

# Routes
@app.route('/')
def home():
    return render_template('index.html')

@app.route('/add_customer', methods=['GET', 'POST'])
def add_customer():
    if request.method == 'POST':
        conn =psycopg2.connect(**db)
        cur = conn.cursor()

        customer_id = request.form['customer_id']
        name = request.form['name']
        contact = request.form['contact']
        address = request.form['address']

        
        cur.execute("INSERT INTO Customer27 VALUES (%s, %s, %s, %s)",
                    (customer_id, name, contact, address))
        conn.commit()
        cur.close()
        conn.close()

        return redirect('/')

    return render_template('add_customer.html')

@app.route('/services')
def services():
    conn =psycopg2.connect(**db)
    cur = conn.cursor()

    cur.execute("SELECT * FROM Services27")
    services = cur.fetchall()
    cur.close()
    conn.close()
    
    return render_template('services.html', services=services)

@app.route('/place_order', methods=['POST'])
def place_order():
    conn = psycopg2.connect(**db)
    cur = conn.cursor()

    customer_id = request.form['customer_id']
    service_id = request.form['service_id']

    # Correct INSERT query
    cur.execute("""
        INSERT INTO Billing27 (CustomerID, ServiceID)
        VALUES (%s, %s)
    """, (customer_id, service_id))
    
    conn.commit()
    cur.close()
    conn.close()

    return redirect('/orders')


@app.route('/orders')
def orders():
    conn =psycopg2.connect(**db)
    cur = conn.cursor()

    cur.execute("""
        SELECT c.CustomerID, c.Name, s.ServiceName, b.OrderDate
        FROM Billing27 b
        JOIN Customer27 c ON b.CustomerID = c.CustomerID
        JOIN Services27 s ON b.ServiceID = s.ServiceID
    """)
    orders = cur.fetchall()
    cur.close()
    conn.close()

    return render_template('orders.html', orders=orders)

if __name__ == '__main__':
    app.run(debug=True)
